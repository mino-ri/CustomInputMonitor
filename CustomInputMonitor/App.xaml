<Application x:Class="CustomInputMonitor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:CustomInputMonitor"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ItemsPanelTemplate x:Key="CanvasTemplate">
            <Canvas />
        </ItemsPanelTemplate>
        <BooleanToVisibilityConverter x:Key="VisibilityConverter" />
        <ControlTemplate TargetType="{x:Type Thumb}" x:Key="ThumbTemplate">
            <Border BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Background="{TemplateBinding Background}"
                    Padding="{TemplateBinding Padding}"
                    SnapsToDevicePixels="True">
                <Viewbox SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                         UseLayoutRounding="{TemplateBinding UseLayoutRounding}">
                    <TextBlock Text="{TemplateBinding Tag}" />
                </Viewbox>
            </Border>
        </ControlTemplate>
        <Style TargetType="{x:Type Thumb}" x:Key="FocusableThumbStyle">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="BorderBrush" Value="{x:Static local:Theme.Background}" />
            <Style.Triggers>
                <Trigger Property="IsKeyboardFocused" Value="True">
                    <Setter Property="BorderBrush" Value="{x:Static local:Theme.Text}" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type Button}" x:Key="CaptionButton">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Height" Value="26" />
            <Setter Property="Width" Value="32" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="{x:Static local:Theme.Background}" />
            <Setter Property="Foreground" Value="{x:Static local:Theme.Text}" />
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{x:Static local:Theme.Close}" />
                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{x:Static Brushes.White}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{x:Static local:Theme.Pressed}" />
                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{x:Static local:Theme.Text}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Button}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="Background" Value="{x:Static local:Theme.Background}" />
            <Setter Property="Foreground" Value="{x:Static local:Theme.Text}" />
            <Setter Property="BorderBrush" Value="{x:Static local:Theme.Text}" />
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Name="Bd"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}"
                            Padding="{TemplateBinding Padding}"
                            SnapsToDevicePixels="True">
                            <ContentPresenter
                                Content="{TemplateBinding Content}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{x:Static local:Theme.Released}" />
                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{x:Static local:Theme.Text}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="Bd" Property="Background" Value="{x:Static local:Theme.Pressed}" />
                                <Setter TargetName="Bd" Property="TextElement.Foreground" Value="{x:Static local:Theme.Text}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <local:ViewModel x:Key="MainViewModel" />
        <local:ConditionalConverter
            x:Key="PressBrushConverter"
            TrueValue="{x:Static local:Theme.Pressed}"
            FalseValue="{x:Static local:Theme.Released}" />
        <local:ConditionalConverter
            x:Key="TextBrushConverter"
            TrueValue="{x:Static Brushes.Transparent}"
            FalseValue="{x:Static local:Theme.Text}" />
    </Application.Resources>
</Application>
